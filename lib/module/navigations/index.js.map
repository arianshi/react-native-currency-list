{"version":3,"names":["React","NavigationIndependentTree","NavigationContainer","createNativeStackNavigator","NavigationService","Screen","ROUTES","ListScreen","TransitionConfig","NONE","transitionSpec","duration","timing","NavigationTransitionOptions","animationEnabled","transitionConfig","config","headerShown","Stack","ListStack","createElement","Navigator","screenOptions","name","LIST_SCREEN","component","CurrencyListNavContainer","ref","navigatorRef","setTopLevelNavigator"],"sources":["index.tsx"],"sourcesContent":["import React from 'react';\nimport { NavigationIndependentTree } from '@react-navigation/core';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport NavigationService from './NavigationService';\nimport type { RootStackParamList } from './types';\nimport Screen from '../components/Screen';\nimport { ROUTES } from '../utils/constants';\nimport ListScreen from '../pages/ListScreen/index';\n\nexport const TransitionConfig = {\n  NONE: () => ({\n    transitionSpec: {\n      duration: 0,\n      timing: 0,\n    },\n  }),\n};\n\nexport const NavigationTransitionOptions = () => ({\n  animationEnabled: false,\n  transitionConfig: TransitionConfig.NONE,\n});\n\nconst config = {\n  headerShown: false,\n};\n\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nconst ListStack = () => {\n  return (\n    <Stack.Navigator screenOptions={config}>\n      <Stack.Screen name={ROUTES.LIST_SCREEN} component={ListScreen} />\n    </Stack.Navigator>\n  );\n};\n\nconst CurrencyListNavContainer = () => {\n  return (\n    <NavigationIndependentTree>\n    <NavigationContainer\n      ref={(navigatorRef) => {\n        NavigationService.setTopLevelNavigator(navigatorRef);\n      }}\n    >\n       <Screen>\n          <ListStack />\n        </Screen>\n    </NavigationContainer>\n    </NavigationIndependentTree>\n  );\n};\n\nexport default CurrencyListNavContainer;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,yBAAyB,QAAQ,wBAAwB;AAClE,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,OAAOC,iBAAiB,MAAM,qBAAqB;AAEnD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,MAAM,QAAQ,oBAAoB;AAC3C,OAAOC,UAAU,MAAM,2BAA2B;AAElD,OAAO,MAAMC,gBAAgB,GAAG;EAC9BC,IAAI,EAAEA,CAAA,MAAO;IACXC,cAAc,EAAE;MACdC,QAAQ,EAAE,CAAC;MACXC,MAAM,EAAE;IACV;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,2BAA2B,GAAGA,CAAA,MAAO;EAChDC,gBAAgB,EAAE,KAAK;EACvBC,gBAAgB,EAAEP,gBAAgB,CAACC;AACrC,CAAC,CAAC;AAEF,MAAMO,MAAM,GAAG;EACbC,WAAW,EAAE;AACf,CAAC;AAED,MAAMC,KAAK,GAAGf,0BAA0B,CAAqB,CAAC;AAE9D,MAAMgB,SAAS,GAAGA,CAAA,KAAM;EACtB,oBACEnB,KAAA,CAAAoB,aAAA,CAACF,KAAK,CAACG,SAAS;IAACC,aAAa,EAAEN;EAAO,gBACrChB,KAAA,CAAAoB,aAAA,CAACF,KAAK,CAACb,MAAM;IAACkB,IAAI,EAAEjB,MAAM,CAACkB,WAAY;IAACC,SAAS,EAAElB;EAAW,CAAE,CACjD,CAAC;AAEtB,CAAC;AAED,MAAMmB,wBAAwB,GAAGA,CAAA,KAAM;EACrC,oBACE1B,KAAA,CAAAoB,aAAA,CAACnB,yBAAyB,qBAC1BD,KAAA,CAAAoB,aAAA,CAAClB,mBAAmB;IAClByB,GAAG,EAAGC,YAAY,IAAK;MACrBxB,iBAAiB,CAACyB,oBAAoB,CAACD,YAAY,CAAC;IACtD;EAAE,gBAED5B,KAAA,CAAAoB,aAAA,CAACf,MAAM,qBACJL,KAAA,CAAAoB,aAAA,CAACD,SAAS,MAAE,CACN,CACS,CACM,CAAC;AAEhC,CAAC;AAED,eAAeO,wBAAwB","ignoreList":[]}